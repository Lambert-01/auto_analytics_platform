version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - DATABASE_URL=postgresql://postgres:password@db:5432/auto_analytics
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - analytics-network

  # PostgreSQL database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=auto_analytics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - analytics-network

  # Redis for task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - analytics-network

  # Celery worker for background tasks
  worker:
    build: .
    command: celery -A backend.app.main worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/auto_analytics
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - analytics-network

  # Celery beat for scheduled tasks
  beat:
    build: .
    command: celery -A backend.app.main beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/auto_analytics
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - analytics-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - analytics-network

volumes:
  postgres_data:

networks:
  analytics-network:
    driver: bridge
